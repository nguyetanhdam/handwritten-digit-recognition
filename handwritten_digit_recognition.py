# -*- coding: utf-8 -*-
"""Handwritten Digit Recognition

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i1P-UZ9co3GgnSDmIyvAADBZ8gYk6y5L
"""

!pip install numpy
!pip install opencv-python
!pip install matplotlib
!pip install tensorflow

import os
import cv2 # about computer vision
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf

mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train = tf.keras.utils.normalize(x_train, axis = 1)
x_test = tf.keras.utils.normalize(x_test, axis = 1)

model = tf.keras.models.load_model('handwritten.model')

loss, accuracy = model.evaluate(x_test, y_test)
print("loss =", loss)
print("accuracy =", accuracy)

image_number = 1
while os.path.isfile(f"digits/pic{image_number}.png"):
  try:
    img = cv2.imread(f"digits/pic{image_number}.png")[:,:,0]
    img = np.invert(np.array([img]))
    prediction = model.predict(img)
    print(f"This digit in pic{image_number}.png is probably a {np.argmax(prediction)}")
    plt.inshow(img[0], cmap=plt.cm.binary)
    plt.show()
  except:
    print("Error!")
  finally:
    image_number += 1